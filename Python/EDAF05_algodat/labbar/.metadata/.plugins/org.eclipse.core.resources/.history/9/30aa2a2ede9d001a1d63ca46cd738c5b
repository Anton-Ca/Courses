import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Scanner;
import java.util.ArrayList;
import java.util.Comparator;

public class run {

	public static void main(String[] args) throws FileNotFoundException {

		long a = System.currentTimeMillis();
		ArrayList<ArrayList<Integer>> data = readData();
		long b = System.currentTimeMillis();

		// System.out.println("TIME TO GATHER DATA: " + (b - a));

		solution s = new solution();

	}

	// Reads data from input, sends to solution class.
	private static ArrayList<ArrayList<Integer>> readData() throws FileNotFoundException {
		int nbrNodes = 0;
		int nbrEdges = 0;
		int capacity = 0;
		int nbrRoutes = 0;
		ArrayList<Edge> edges = new ArrayList<>();
		
		File file = new File("data/sample/1.in");

		try {
			Scanner scanner = new Scanner(file);
			nbrNodes = scanner.nextInt();
			nbrEdges = scanner.nextInt();
			capacity = scanner.nextInt();
			nbrRoutes = scanner.nextInt();

			for (int i = 0; i < nbrEdges; i++) {
				int n1 = scanner.nextInt();
				int n2 = scanner.nextInt();
				int c = scanner.nextInt();
				edges.add(new Edge(n1, n2, c));
			}
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		}

		return null;

	}
	
	private static class Edge{
		int start;
		int end;
		int weight;
		
		public Edge(int start, int end, int weight) {
			this.start = start;
			this.end = end;
			this.weight = weight;
		}
		
		@Override
		public String toString() {
			return "Start: " + start + " | End: " + end + " | Weight: " + weight;
		}
		
	}
	
}